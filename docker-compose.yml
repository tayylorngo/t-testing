version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: t-testing-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: t-testing
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - t-testing-network

  # Redis for session storage (optional, for scaling)
  redis:
    image: redis:7-alpine
    container_name: t-testing-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - t-testing-network

  # Application
  app:
    build: .
    container_name: t-testing-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/t-testing?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3001}
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - t-testing-network
    volumes:
      - ./uploads:/app/uploads

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: t-testing-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - t-testing-network

volumes:
  mongodb_data:
  redis_data:

networks:
  t-testing-network:
    driver: bridge
